name: Build APK and Deploy HTML

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 设置 Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      # 设置 Java
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 安装 Android SDK
      - name: Install Android SDK
        run: |
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O commandlinetools.zip
          unzip commandlinetools.zip -d /tmp/android-sdk
          mkdir -p $HOME/android-sdk/cmdline-tools/latest
          mv /tmp/android-sdk/cmdline-tools/* $HOME/android-sdk/cmdline-tools/latest/
          export ANDROID_HOME=$HOME/android-sdk
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
          echo "PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_ENV

      # 接受 Android SDK 许可证
      - name: Accept Android SDK licenses
        run: |
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME --licenses || true
          sleep 5
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME --licenses || true
          ls -l $ANDROID_HOME/licenses || echo "No licenses found"

      # 安装 Android SDK Build-Tools 和 Platform
      - name: Install Android SDK Build-Tools and Platform
        run: |
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME "build-tools;30.0.3" "platforms;android-30" "ndk;23.1.7779620"
          ls -l $ANDROID_HOME/build-tools/
          ls -l $ANDROID_HOME/build-tools/30.0.3/

      # 清理其他 Build-Tools 版本
      - name: Clean other Build-Tools versions
        run: |
          find $ANDROID_HOME/build-tools/ -maxdepth 1 -type d -not -name "30.0.3" -not -name "build-tools" -exec rm -rf {} +
          ls -l $ANDROID_HOME/build-tools/

      # 调试 SDK 和 Build-Tools
      - name: Debug SDK and Build-Tools
        run: |
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
          ls -l $ANDROID_HOME
          ls -l $ANDROID_HOME/build-tools || echo "Build-Tools directory missing"
          ls -l $ANDROID_HOME/build-tools/30.0.3 || echo "Build-Tools 30.0.3 missing"
          $ANDROID_HOME/build-tools/30.0.3/aidl --version || echo "AIDL not found"
          ls -l $ANDROID_HOME/licenses || echo "Licenses directory missing"
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --list

      # 安装 Buildozer 系统依赖
      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential git python3 python3-dev ffmpeg \
            libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev \
            zlib1g-dev

      # 安装 Python 依赖
      - name: Install Python dependencies
        run: |
          pip install --user buildozer==1.5.0 kivy cython==0.29.36

      # 清理 Buildozer 缓存
      - name: Clean Buildozer cache
        run: |
          rm -rf /home/runner/.buildozer
          buildozer android clean || true
        working-directory: .

      # 构建 APK
      - name: Build APK
        run: |
          buildozer -v android debug
        working-directory: .
        env:
          ANDROID_SDK_ROOT: $HOME/android-sdk
          ANDROID_NDK_HOME: $HOME/android-sdk/ndk/23.1.7779620

      # 上传 APK 工件
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: localhostapp-apk
          path: bin/*.apk
          retention-days: 30

      # 部署 HTML 到 gh-pages
      - name: Deploy HTML to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
          publish_branch: gh-pages
          keep_files: false
          include_files: index.html
